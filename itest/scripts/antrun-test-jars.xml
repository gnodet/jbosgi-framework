<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  JBossOSGi Framework
  %%
  Copyright (C) 2010 - 2012 JBoss by Red Hat
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as 
  published by the Free Software Foundation, either version 2.1 of the 
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Lesser Public License for more details.
  
  You should have received a copy of the GNU General Lesser Public 
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/lgpl-2.1.html>.
  #L%
  -->

<project default="build-test-jars">

    <description>OSGi test archive builder</description>

    <!-- ================================================================== -->
    <!-- Init                                                               -->
    <!-- ================================================================== -->

    <target name="init">

        <!-- Property override when not called from maven -->
        <property name="maven.runtime.classpath" value="/usr/java/bnd.jar" />
        <property name="tests.output.dir" value="${basedir}/../target" />

        <mkdir dir="${tests.output.dir}/test-libs" />
        <property name="tests.classes.dir" value="${tests.output.dir}/test-classes" />
        <property name="tests.resources.dir" value="${tests.output.dir}/test-classes" />

        <taskdef resource="aQute/bnd/ant/taskdef.properties">
            <classpath>
                <pathelement path="${maven.runtime.classpath}" />
            </classpath>
        </taskdef>

    </target>

    <!-- ================================================================== -->
    <!-- Building                                                           -->
    <!-- ================================================================== -->

    <target name="build-test-jars" depends="init" description="Build the test deployments">

        <!-- Please add alphabetically -->

        <!-- bundle-classpath -->
        <jar destfile="${tests.output.dir}/test-libs/bundle-classpath-b.jar">
            <fileset dir="${tests.classes.dir}">
                <include name="**/classloader/support/b/B.class" />
            </fileset>
            <fileset dir="${tests.resources.dir}/bundles/classloader">
                <include name="bundleclasspath/message.txt" />
            </fileset>
        </jar>
        <jar destfile="${tests.output.dir}/test-libs/bundle-classpath-c.jar">
            <fileset dir="${tests.classes.dir}">
                <include name="**/classloader/support/c/CA.class" />
            </fileset>
        </jar>
        <war destfile="${tests.output.dir}/test-libs/bundle-classpath.war" manifest="${tests.resources.dir}/bundles/classloader/bundleclasspath/MANIFEST.MF" webxml="${tests.resources.dir}/bundles/classloader/bundleclasspath/web.xml">
            <classes dir="${tests.classes.dir}">
                <include name="**/classloader/support/a/A.class" />
            </classes>
            <lib dir="${tests.output.dir}/test-libs">
                <include name="bundle-classpath-b.jar" />
            </lib>
            <fileset dir="${tests.resources.dir}/bundles/classloader/bundleclasspath">
                <include name="message.txt" />
            </fileset>
            <fileset dir="${tests.output.dir}/test-libs">
                <include name="bundle-classpath-c.jar" />
            </fileset>
        </war>

        <!-- native code -->
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/fragment-nativecode.jar" files="${tests.resources.dir}/nativecode/fragment-nativecode.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/host-nativecode.jar" files="${tests.resources.dir}/nativecode/host-nativecode.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/nativecode.jar" files="${tests.resources.dir}/nativecode/nativecode.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/nativecode2.jar" files="${tests.resources.dir}/nativecode/nativecode2.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/nativecode3.jar" files="${tests.resources.dir}/nativecode/nativecode3.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/nativecode4.jar" files="${tests.resources.dir}/nativecode/nativecode4.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/nativecode5.jar" files="${tests.resources.dir}/nativecode/nativecode5.bnd" />
        <bnd classpath="${tests.classes.dir}" output="${tests.output.dir}/test-libs/simple-nativecode.jar" files="${tests.resources.dir}/nativecode/simple-nativecode.bnd" />

        <!-- Please add alphabetically -->

    </target>

</project>
